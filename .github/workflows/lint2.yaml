on:
    workflow_call:
      inputs:
        checkov_version:
          description: 'Checkov version'
          type: string
          default: "2.3.245"
        tfsec_version:
          description: 'tfsec version'
          type: string
          default: "1.28.1"
  
jobs:
  # checkov:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Test with Checkov
  #     id: checkov
  #     uses: bridgecrewio/checkov-action@v12.1346.0
  #     with:
  #       framework: terraform
  #       output_format: sarif
  #       output_file_path: sarif_dir
  #       version: ${{ inputs.checkov_version }}
  #   - name: Upload terrascan SARIF file
  #     uses: github/codeql-action/upload-sarif@v2
  #     if: success() || failure()
  #     with:
  #       sarif_file: sarif_dir/results_sarif.sarif

  # tfsec:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: tfsec
  #     uses: aquasecurity/tfsec-sarif-action@v0.1.4
  #     with:
  #       tfsec_version: ${{ inputs.tfsec_version }}
  #       sarif_file: tfsec.sarif
  #   - name: Upload terrascan SARIF file
  #     uses: github/codeql-action/upload-sarif@v2
  #     if: success() || failure()
  #     with:
  #       sarif_file: tfsec.sarif
      
  find-test-dirs:      
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Find test directories
          shell: bash
          run: |
            ls -R
            find "modules" -name "tests"
        - id: set-dirs
          run: |
            dirs=$(find ./ -name "test" -or -name "tests" \
              -not -path '*/.terraform/*' \
              | jq --raw-input --slurp 'split("\n")[:-1]')
            echo "dirs=$(echo $dirs)" >> $GITHUB_OUTPUT
      outputs:
        dirs: ${{ steps.set-dirs.outputs.dirs }}

  test:
    runs-on: ubuntu-latest
    needs: find-test-dirs
    strategy:
        matrix:
          dirs: ${{fromJson(needs.find-test-dirs.outputs.dirs)}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        working-directory: ${{ matrix.dirs }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        working-directory: ${{ matrix.dirs }}
        run: |
          pytest






